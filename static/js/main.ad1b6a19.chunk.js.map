{"version":3,"sources":["Player.js","App.js","reportWebVitals.js","index.js"],"names":["Player","state","index","currentTime","musicList","name","author","img","audio","duration","pause","changeCurrentTime","e","playerRef","playheadWidth","timelineRef","offsetWidth","offsetWidht","offsetLeft","userClickWidhtInPercent","clientX","playheadRef","style","width","hoverTimeLine","hoverPlayheadRef","time","dataset","content","formatTime","resetTimeLine","timeUpdate","playPercent","parseInt","setState","minutes","Math","floor","seconds","updatePlayer","currentSong","Audio","load","nextSong","length","play","prevSong","playOrPause","clickAudio","key","this","addEventListener","removeEventListener","className","ref","src","type","id","class","data-content","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad1b6a19.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Player extends React.Component {\n  state = {\n    index: 2,\n    currentTime: \"0:00\",\n    musicList: [\n      {\n        name: \"Red\",\n        author: \"Taylor Swift\",\n        img: \"https://firebasestorage.googleapis.com/v0/b/music-6fc30.appspot.com/o/taylorred.jpeg?alt=media&token=8a21033a-6775-4b45-bc91-4a9ecafc7b84\",\n        audio:\n          \"https://firebasestorage.googleapis.com/v0/b/music-6fc30.appspot.com/o/02%20Red%20(Taylor's%20Version).m4a?alt=media&token=070662d0-a7d1-4ff0-a41b-103a1b951239\",\n        duration: \"3:43\",\n      },\n      {\n        name: \"I Knew You Were Trouble\",\n        author: \"Taylor Swift\",\n        img: \"https://firebasestorage.googleapis.com/v0/b/music-6fc30.appspot.com/o/taylorred.jpeg?alt=media&token=8a21033a-6775-4b45-bc91-4a9ecafc7b84\",\n        audio:\n          \"https://firebasestorage.googleapis.com/v0/b/music-6fc30.appspot.com/o/04%20I%20Knew%20You%20Were%20Trouble%20(Taylor's.m4a?alt=media&token=01a643d8-c27e-42c2-aee0-81622f831f47\",\n        duration: \"3:39\",\n      },\n      {\n        name: \"All Too Well\",\n        author: \"Taylor Swift\",\n        img: \"https://firebasestorage.googleapis.com/v0/b/music-6fc30.appspot.com/o/taylorred.jpeg?alt=media&token=8a21033a-6775-4b45-bc91-4a9ecafc7b84\",\n        audio:\n          \"https://firebasestorage.googleapis.com/v0/b/music-6fc30.appspot.com/o/05%20All%20Too%20Well%20(Taylor's%20Version).m4a?alt=media&token=d81bfaa5-6ca5-412e-bb7e-b0ee487aa337\",\n        duration: \"5:29\",\n      },\n    ],\n    pause: false,\n  };\n\n  componentDidMount() {\n    this.playerRef.addEventListener(\"timeupdate\", this.timeUpdate, false);\n    this.playerRef.addEventListener(\"ended\", this.nextSong, false);\n    this.timelineRef.addEventListener(\"click\", this.changeCurrentTime, false);\n    this.timelineRef.addEventListener(\"mousemove\", this.hoverTimeLine, false);\n    this.timelineRef.addEventListener(\"mouseout\", this.resetTimeLine, false);\n  }\n\n  componentWillUnmount() {\n    this.playerRef.removeEventListener(\"timeupdate\", this.timeUpdate);\n    this.playerRef.removeEventListener(\"ended\", this.nextSong);\n    this.timelineRef.removeEventListener(\"click\", this.changeCurrentTime);\n    this.timelineRef.removeEventListener(\"mousemove\", this.hoverTimeLine);\n    this.timelineRef.removeEventListener(\"mouseout\", this.resetTimeLine);\n  }\n\n  changeCurrentTime = (e) => {\n    const duration = this.playerRef.duration;\n\n    const playheadWidth = this.timelineRef.offsetWidth;\n    const offsetWidht = this.timelineRef.offsetLeft;\n    const userClickWidht = e.clientX - offsetWidht;\n\n    const userClickWidhtInPercent = (userClickWidht * 100) / playheadWidth;\n\n    this.playheadRef.style.width = userClickWidhtInPercent + \"%\";\n    this.playerRef.currentTime = (duration * userClickWidhtInPercent) / 100;\n  };\n\n  hoverTimeLine = (e) => {\n    const duration = this.playerRef.duration;\n\n    const playheadWidth = this.timelineRef.offsetWidth;\n\n    const offsetWidht = this.timelineRef.offsetLeft;\n    const userClickWidht = e.clientX - offsetWidht;\n    const userClickWidhtInPercent = (userClickWidht * 100) / playheadWidth;\n\n    if (userClickWidhtInPercent <= 100) {\n      this.hoverPlayheadRef.style.width = userClickWidhtInPercent + \"%\";\n    }\n\n    const time = (duration * userClickWidhtInPercent) / 100;\n\n    if (time >= 0 && time <= duration) {\n      this.hoverPlayheadRef.dataset.content = this.formatTime(time);\n    }\n  };\n\n  resetTimeLine = () => {\n    this.hoverPlayheadRef.style.width = 0;\n  };\n\n  timeUpdate = () => {\n    const duration = this.playerRef.duration;\n    const timelineWidth =\n      this.timelineRef.offsetWidth - this.playheadRef.offsetWidth;\n    const playPercent = 100 * (this.playerRef.currentTime / duration);\n    this.playheadRef.style.width = playPercent + \"%\";\n    const currentTime = this.formatTime(parseInt(this.playerRef.currentTime));\n    this.setState({\n      currentTime,\n    });\n  };\n\n  formatTime = (currentTime) => {\n    const minutes = Math.floor(currentTime / 60);\n    let seconds = Math.floor(currentTime % 60);\n\n    seconds = seconds >= 10 ? seconds : \"0\" + (seconds % 60);\n\n    const formatTime = minutes + \":\" + seconds;\n\n    return formatTime;\n  };\n\n  updatePlayer = () => {\n    const { musicList, index } = this.state;\n    const currentSong = musicList[index];\n    const audio = new Audio(currentSong.audio);\n    this.playerRef.load();\n  };\n\n  nextSong = () => {\n    const { musicList, index, pause } = this.state;\n\n    this.setState({\n      index: (index + 1) % musicList.length,\n    });\n    this.updatePlayer();\n    if (pause) {\n      this.playerRef.play();\n    }\n  };\n\n  prevSong = () => {\n    const { musicList, index, pause } = this.state;\n\n    this.setState({\n      index: (index + musicList.length - 1) % musicList.length,\n    });\n    this.updatePlayer();\n    if (pause) {\n      this.playerRef.play();\n    }\n  };\n\n  playOrPause = () => {\n    const { musicList, index, pause } = this.state;\n    const currentSong = musicList[index];\n    const audio = new Audio(currentSong.audio);\n    if (!this.state.pause) {\n      this.playerRef.play();\n    } else {\n      this.playerRef.pause();\n    }\n    this.setState({\n      pause: !pause,\n    });\n  };\n\n  clickAudio = (key) => {\n    const { pause } = this.state;\n\n    this.setState({\n      index: key,\n    });\n\n    this.updatePlayer();\n    if (pause) {\n      this.playerRef.play();\n    }\n  };\n\n  render() {\n    const { musicList, index, currentTime, pause } = this.state;\n    const currentSong = musicList[index];\n    return (\n      <div className=\"card\">\n        <div className=\"current-song\">\n          <audio ref={(ref) => (this.playerRef = ref)}>\n            <source src={currentSong.audio} type=\"audio/ogg\" />\n            Your browser does not support the audio element.\n          </audio>\n          <div className=\"img-wrap\">\n            <img src={currentSong.img} />\n          </div>\n          <span className=\"song-name\">{currentSong.name}</span>\n          <span className=\"song-autor\">{currentSong.author}</span>\n\n          <div className=\"time\">\n            <div className=\"current-time\">{currentTime}</div>\n            <div className=\"end-time\">{currentSong.duration}</div>\n          </div>\n\n          <div ref={(ref) => (this.timelineRef = ref)} id=\"timeline\">\n            <div ref={(ref) => (this.playheadRef = ref)} id=\"playhead\"></div>\n            <div\n              ref={(ref) => (this.hoverPlayheadRef = ref)}\n              class=\"hover-playhead\"\n              data-content=\"0:00\"\n            ></div>\n          </div>\n\n          <div className=\"controls\">\n            <button\n              onClick={this.prevSong}\n              className=\"prev prev-next current-btn\"\n            >\n              <i className=\"fas fa-backward\"></i>\n            </button>\n\n            <button onClick={this.playOrPause} className=\"play current-btn\">\n              {!pause ? (\n                <i className=\"fas fa-play\"></i>\n              ) : (\n                <i class=\"fas fa-pause\"></i>\n              )}\n            </button>\n            <button\n              onClick={this.nextSong}\n              className=\"next prev-next current-btn\"\n            >\n              <i className=\"fas fa-forward\"></i>\n            </button>\n          </div>\n        </div>\n        {/* <div className=\"play-list\">\n          {musicList.map((music, key = 0) => (\n            <div\n              key={key}\n              onClick={() => this.clickAudio(key)}\n              className={\n                \"track \" +\n                (index === key && !pause ? \"current-audio\" : \"\") +\n                (index === key && pause ? \"play-now\" : \"\")\n              }\n            >\n              <img className=\"track-img\" src={music.img} />\n              <div className=\"track-discr\">\n                <span className=\"track-name\">{music.name}</span>\n                <span className=\"track-author\">{music.author}</span>\n              </div>\n              <span className=\"track-duration\">\n                {index === key ? currentTime : music.duration}\n              </span>\n            </div>\n          ))} \n        </div>*/}\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import \"./App.css\";\nimport Player from \"./Player\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}